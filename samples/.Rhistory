png('adaline.png', width=w, height=h)
lcolors <- c("red", "green")
setwd("\Github\ML\samples\")
setwd("\Github\ML\sample\")
setwd("/Github/ML/sample/")
setwd("/Github/ML/samples/")
getwd()
png('adaline.png', width=w, height=h)
source("../lib/common.r")
source("../lib/metric.r")
source("../lib/kernel.r")
source("../lib/learn.r")
source("../lib/bayes.r")
#init
sel<-iris[,3:5]
pl<-sel[,1:2]
mi <- c(1, 0.1)
ma <- c(7, 2.5)
acc <- 3
colors <- c(setosa="red", versicolor="green", virginica="blue")
par("lwd")
w<-1000
h<-500
png('adaline.png', width=w, height=h)
lcolors <- c("red", "green")
names(lcolors)<-c(-1,1)
lsel<-sel[sel$Species!="virginica",]
lsel[,3] <- as.vector(lsel$Species == "setosa")*2-1
plot(lsel[,1:2], col=lcolors[sel$Species], pch=19, main="Adaline t=0.05, 100 iterations")
w<-learn.adaline(data.frame(-1, lsel), 0.05,0.05,100)
lines(c(0, -w[1]/w[2]), c(-w[1]/w[3], 0), col="blue")
dev.off()
#LOO in parzen auto
png('loo_parzen_auto.png', width=1000, height=1000)
par(mfrow=c(3, 2))
hs<-1:20
p<-loo.list(mc.parzen.auto, sel, hs, ker.T)
plot(p, type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Triangular", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.P),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Pramougolnoe", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.E),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Epanechnikova", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.G),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Gaussian", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.Q),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Quarticheskoe", ylim=c(0, 0.2))
dev.off()
par(mfrow=c(1, 1))
#LOO in parzen auto
png('loo_parzen_auto.png', width=800, height=800)
par(mfrow=c(3, 2))
hs<-1:20
p<-loo.list(mc.parzen.auto, sel, hs, ker.T)
plot(p, type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Triangular", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.P),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Pramougolnoe", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.E),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Epanechnikova", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.G),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Gaussian", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.Q),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Quarticheskoe", ylim=c(0, 0.2))
dev.off()
par(mfrow=c(1, 1))
#Lattice parzen
png('loo_parzen.png', width=800, height=800)
par(mfrow=c(3, 2))
hs<-seq(from=0.1, to=2, by=0.1)
p<-loo.list(mc.parzen, sel, hs, ker.T)
plot(p, type="l", xlab="k", ylab="error", main="LOO PARZEN WINDOW K=Triangular", ylim=c(0, 0.2))
plot(loo.list(mc.parzen, sel, hs, ker.P),
type="l", xlab="k", ylab="error", main="LOO PARZEN WINDOW K=Pramougolnoe", ylim=c(0, 0.2))
plot(loo.list(mc.parzen, sel, hs, ker.E),
type="l", xlab="k", ylab="error", main="LOO PARZEN WINDOW K=Epanechnikova", ylim=c(0, 0.2))
plot(loo.list(mc.parzen, sel, hs, ker.G),
type="l", xlab="k", ylab="error", main="LOO PARZEN WINDOW K=Gaussian", ylim=c(0, 0.2))
plot(loo.list(mc.parzen, sel, hs, ker.Q),
type="l", xlab="k", ylab="error", main="LOO PARZEN WINDOW K=Quarticheskoe", ylim=c(0, 0.2))
dev.off()
plot(pl, col=colors[sel$Species], pch=19, main="Plugin")
lattice(bc.plugin, sel, colors, mi, ma, 0.1, bc.apr(sel), bc.m(sel), bc.cov(sel))
legend(mi[1], ma[2], legend=paste("LOO =", round(loo(mc.plugin, sel, bc.apr(sel), bc.m(sel), bc.cov(sel)), digits=3)))
legend(mi[1], ma[2], legend=paste("LOO =", round(loo(bc.plugin, sel, bc.apr(sel), bc.m(sel), bc.cov(sel)), digits=3)))
png('fisher.png', width=w, height=h)
dev.off()
png('fisher.png', width=w, height=h)
plot(pl, col=colors[sel$Species], pch=19, main="Fisher")
lattice(bc.fisher, sel, colors, mi, ma, 0.1, bc.apr(sel), bc.m(sel))
legend(mi[1], ma[2], legend=paste("LOO =", round(loo(bc.fisher, sel, bc.apr(sel), bc.m(sel)), digits=3)))
dev.off()
legend(mi[1], ma[2], legend=paste("LOO =", round(loo(bc.fisher, sel, bc.apr(sel), bc.m(sel)), digits=3)))
plot(pl, col=colors[sel$Species], pch=19, main="Fisher")
lattice(bc.fisher, sel, colors, mi, ma, 0.1, bc.apr(sel), bc.m(sel))
legend(mi[1], ma[2], legend=paste("LOO =", round(loo(bc.fisher, sel, bc.apr(sel), bc.m(sel)), digits=3)))
plot(pl, col=colors[sel$Species], pch=19, main="Plugin")
lattice(bc.plugin, sel, colors, mi, ma, 0.1, bc.apr(sel), bc.m(sel), bc.cov(sel))
legend(mi[1], ma[2], legend=paste("LOO =", round(loo(bc.plugin, sel, bc.apr(sel), bc.m(sel), bc.cov(sel)), digits=3)))
#Lattice parzen
png('loo_parzen.png', width=800, height=800)
par(mfrow=c(3, 2))
hs<-seq(from=0.1, to=2, by=0.1)
p<-loo.list(mc.parzen, sel, hs, ker.T)
plot(p, type="l", xlab="k", ylab="error", main="LOO PARZEN WINDOW K=Triangular", ylim=c(0, 0.2))
plot(loo.list(mc.parzen, sel, hs, ker.P),
type="l", xlab="k", ylab="error", main="LOO PARZEN WINDOW K=Pramougolnoe", ylim=c(0, 0.2))
plot(loo.list(mc.parzen, sel, hs, ker.E),
type="l", xlab="k", ylab="error", main="LOO PARZEN WINDOW K=Epanechnikova", ylim=c(0, 0.2))
plot(loo.list(mc.parzen, sel, hs, ker.G),
type="l", xlab="k", ylab="error", main="LOO PARZEN WINDOW K=Gaussian", ylim=c(0, 0.2))
plot(loo.list(mc.parzen, sel, hs, ker.Q),
type="l", xlab="k", ylab="error", main="LOO PARZEN WINDOW K=Quarticheskoe", ylim=c(0, 0.2))
dev.off()
#LOO in parzen auto
png('loo_parzen_auto.png', width=800, height=800)
par(mfrow=c(3, 2))
hs<-1:20
p<-loo.list(mc.parzen.auto, sel, hs, ker.T)
plot(p, type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Triangular", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.P),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Pramougolnoe", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.E),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Epanechnikova", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.G),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Gaussian", ylim=c(0, 0.2))
plot(loo.list(mc.parzen.auto, sel, hs, ker.Q),
type="l", xlab="h", ylab="error", main="LOO PARZEN WINDOW AUTO K=Quarticheskoe", ylim=c(0, 0.2))
dev.off()
