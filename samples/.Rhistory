#1NN lattice with LOO
plot(pl, col=colors[sel$Species], main="1NN", pch=19)
source("../lib/common.r")
source("../lib/metric.r")
source("../lib/kernel.r")
source("../lib/learn.r")
ls()
ls
list()
source("../lib/common.r")
source("../lib/metric.r")
lst
dir()
#LOO in kwnn
png('loo_kwnn.png', width=w, height=h)
p<-loo.list(mc.kwnn, sel, 1:50, mc.wlin)
plot(p, type="l", xlab="k", ylab="error", main="LOO KWNN")
setwd("Github/ML/samples")
source("../lib/common.r")
source("../lib/metric.r")
source("../lib/kernel.r")
source("../lib/learn.r")
source("../lib/bayes.r")
#init
sel<-iris[,3:5]
pl<-sel[,1:2]
mi <- c(1, 0.1)
ma <- c(7, 2.5)
acc <- 3
colors <- c(setosa="red", versicolor="green", virginica="blue")
par("lwd")
w<-1000
h<-500
#LOO in kwnn
png('loo_kwnn.png', width=w, height=h)
p<-loo.list(mc.kwnn, sel, 1:50, mc.wlin)
plot(p, type="l", xlab="k", ylab="error", main="LOO KWNN")
legend(0, 0.066, legend=paste("LOO(6) =", round(loo(mc.kwnn, sel, 6, mc.wlin), digits=3)))
dev.off()
plot(pl, col=colors[sel$Species], pch=19, main="Plugin")
lattice(bc.plugin, sel, colors, mi, ma, 0.1, bc.apr(sel), bc.m(sel), bc.cov(sel))
png('plugin.png', width=w, height=h)
plot(pl, col=colors[sel$Species], pch=19, main="Plugin")
lattice(bc.plugin, sel, colors, mi, ma, 0.1, bc.apr(sel), bc.m(sel), bc.cov(sel))
dev.off()
png('fisher.png', width=w, height=h)
plot(pl, col=colors[sel$Species], pch=19, main="Fisher")
lattice(bc.fisher, sel, colors, mi, ma, 0.1, bc.apr(sel), bc.m(sel))
dev.off()
plot(pl, col=colors[sel$Species], pch=19, main="Fisher")
lattice(bc.fisher, sel, colors, mi, ma, 0.1, bc.apr(sel), bc.m(sel))
lcolors <- c("red", "green")
names(lcolors)<-c(-1,1)
lsel<-sel
lsel[,3] <- as.vector(sel$Species == "setosa")*2-1
plot(lsel[,1:2], col=lcolors[sel$Species], pch=19, main="Adaline t=0.05, 100 iterations")
w<-learn.adaline(data.frame(-1, lsel), 0.05,0.5,100)
colors
lcolors <- c("red", "green")
names(lcolors)<-c(-1,1)
lsel<-sel[sel$Species!="virginica"]
T|F
lsel<-sel[sel$Species=="virginica"|sel$Species=="versicolor"]
lsel<-sel[,sel$Species=="virginica"|sel$Species=="versicolor"]
lsel<-sel[sel$Species=="virginica"|sel$Species=="versicolor",]
lsel
lsel<-sel[sel$Species!="virginica",]
lsel
lsel[,3] <- as.vector(sel$Species == "setosa")*2-1
lsel<-sel[sel$Species!="virginica",]
lsel[,3] <- as.vector(lsel$Species == "setosa")*2-1
plot(lsel[,1:2], col=lcolors[sel$Species], pch=19, main="Adaline t=0.05, 100 iterations")
w<-learn.adaline(data.frame(-1, lsel), 0.05,0.5,100)
png('adaline.png', width=w, height=h)
lcolors <- c("red", "green")
names(lcolors)<-c(-1,1)
lsel<-sel[sel$Species!="virginica",]
lsel[,3] <- as.vector(lsel$Species == "setosa")*2-1
plot(lsel[,1:2], col=lcolors[sel$Species], pch=19, main="Adaline t=0.05, 100 iterations")
w<-learn.adaline(data.frame(-1, lsel), 0.05,0.5,100)
dev.off()
png('adaline.png', width=w, height=h)
lcolors <- c("red", "green")
dev.off()
png('adaline.png', width=w, height=h)
